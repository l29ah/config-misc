#!/bin/bash -x
iface='wlan0'
conf='/etc/wpa_supplicant/wpa_supplicant.conf'

fail() {
	echo "Fuck you! $@"
	exit 1
}
run() {
	/etc/init.d/net.$iface restart
}
default() {
	cp "${conf}.default" "$conf"
	run
	exit 0
}

declare -a a
declare -A keytype
/etc/init.d/net.$iface stop
rfkill unblock wlan
ifconfig "$iface" up
while read s; do
	eval "$s"
	[ -n "$ESSID" ] && {
		keytype[$ESSID]="$key"	# TODO: key type - wep/wpa/wpa2/wtfelse
		comment="$qual, key: $key"
		grep "^\s*ssid=\"$ESSID\"" "$conf" 2>&1 >/dev/null && comment="$comment *"
		a[${#a[@]}]="$ESSID"
		a[${#a[@]}]="$comment"
		unset ESSID
	}
done < <( iwlist $iface scan | sed -rn 's#^[^#]*(ESSID|key):"?([^"]*)"?.*$#\1="\2"#p; s#^\s*Quality=(\S*).*#qual=\1#p' )
exec 3>&1
ESSID=$(dialog --menu "Choose network" 20 80 15 "${a[@]}" 2>&1 1>&3) || default
[ -n "$ESSID" ] || fail
if [[ "${keytype[$ESSID]}" == "on" ]]; then
	passphrase=$(dialog --passwordbox "Enter password for $ESSID" 20 80 2>&1 1>&3)
	res=$(wpa_passphrase "$ESSID" "$passphrase") || {
		e="$res; trying to connect anyway"
		res="`perl -0777 -n -e 's/.*\n(network={\n.*?ssid="'"$ESSID"'".*?})/$1/ms and print' < "${conf}.default"`"
		run
		fail "$e"
	}
else
	res="
network={
	ssid=\"$ESSID\"
	key_mgmt=NONE
}
"
fi
echo "$res"
cat "${conf}.template" > "$conf"
echo "$res" >> "$conf"
echo "$res" >> "${conf}.default"
run
